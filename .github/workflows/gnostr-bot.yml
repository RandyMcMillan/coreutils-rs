name: gnostr-bot

# Controls when the action will run.
on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  pull_request:
    branches:
      - '*'
      - '*/*'
      - '**'
      - 'master'
      - 'main'
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
      - 'master'
      - 'main'
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'
      - '**test**'
      - '**-rc**'
  workflow_dispatch:

permissions:
  contents: write

env:
  GIT_DISCOVERY_ACROSS_FILESYSTEM: 1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        tag: ["latest"]
    runs-on: ${{ matrix.os }}
    container: rust:${{ matrix.tag }}

    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        if: ${{ !env.ACT }}
        with:
          access_token: ${{ github.token }}

      - name: Restore rustup
        id: cache-rustup-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.rustup
          key: ${{ runner.os }}-rustup

      - name: Restore cargo
        id: cache-cargo-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo

      - name: Restore target
        id: cache-target-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            target
          key: ${{ runner.os }}-target

      - run: git config --global --add safe.directory /__w/gnostr/gnostr || true
      - run: printenv
      - run: apt-get update && apt-get install apt -y
      - run: apt-get install cmake make sudo -y #&& cmake -S .
      - run: apt-get install golang-1.19-go golang-1.19-src golang-go golang-src
      - run: apt-get install -y cargo-doc clang-14-doc wasi-libc cmake-doc cmake-format elpa-cmake-mode ninja-build autopoint gettext-doc libasprintf-dev libgettextpo-dev lrzip llvm-14-doc python3-setuptools python-pygments-doc
      - run: apt-get install -y lib32stdc++6 libc6-i386 lib32gcc-s1 ttf-bitstream-vera lld-14 || true
      - run: apt-get install binfmt-support cargo clang clang-14 cmake cmake-data gettext gettext-base libarchive13 libclang-common-14-dev libclang-cpp14 libclang-rt-14-dev libclang1-14 libcurl3-nss libgc1 libgit2-1.5 libhttp-parser2.9 libjsoncpp25 libllvm14 libmbedcrypto7 libmbedtls14 libmbedx509-1 libnspr4 libnss3 libobjc-12-dev libobjc4 libpfm4 libpipeline1 librhash0 libstd-rust-1.63 libstd-rust-dev libuv1 libz3-4 libz3-dev llvm-14 llvm-14-dev llvm-14-linker-tools llvm-14-runtime llvm-14-tools nss-plugin-pem python-is-python3 python3-pkg-resources python3-pygments python3-yaml rustc sudo -y
      - run: cargo install --force gnostr-sha256
      - run: cargo install --force gnostr-bins
      ## NOTE: make gnostr-am is the non-cmake build
      - run: make gnostr && echo $(which gnostr)
      - run: make gnostr gnostr-install && echo $(which gnostr)
      - run: gnostr-nip --sec $(gnostr-sha256) | gnostr-post-event
        if: github.event_name == 'pull_request'
      - run: gnostr-nip --sec $(gnostr-sha256 $(gnostr-weeble)) | gnostr-post-event
        if: github.event_name == 'pull_request'
      - run: gnostr-nip --sec $(gnostr-sha256 $(gnostr-weeble)$(gnostr-blockheight)) | gnostr-post-event
        if: github.event_name == 'pull_request'
      - run: gnostr-am --sec $(gnostr-sha256 $(gnostr-weeble)) --content $(gnostr-weeble)/$(gnostr-blockheight)/$(gnostr-wobble) -t gnostr --tag weeble $(gnostr-weeble) --tag blockheight $(gnostr-blockheight) --tag wobble $(gnostr-wobble)
        if: github.event_name == 'pull_request'

      - run: echo $(date +%s)
      - run: ls -a
      - run: $(which gnostr-am) --sec $(gnostr-sha256 $(gnostr-weeble)) -t gnostr --tag weeble $(gnostr-weeble) --tag wobble $(gnostr-wobble) --tag blockheight $(gnostr-blockheight) --content "$(gnostr-weeble)/$(gnostr-blockheight)/$(gnostr-wobble)" | gnostr-post-event wss://relay.damus.io
      - run: $(which gnostr-am) --sec $(gnostr-sha256 $(gnostr-weeble)$(gnostr-blockheight)) -t gnostr --tag weeble $(gnostr-weeble) --tag wobble $(gnostr-wobble) --tag blockheight $(gnostr-blockheight) --content "$(gnostr-weeble)/$(gnostr-blockheight)/$(gnostr-wobble)" | gnostr-post-event wss://relay.damus.io
      - run: gnostr-nip --sec $(gnostr-sha256)                                       | gnostr-post-event
      - run: gnostr-nip --sec $(gnostr-sha256 $(gnostr-weeble))                      | gnostr-post-event
      - run: gnostr-nip --sec $(gnostr-sha256 $(gnostr-weeble)$(gnostr-blockheight)) | gnostr-post-event

      - name: Save rustup
        id: cache-rustup-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.rustup
          key: ${{ steps.cache-rustup-restore.outputs.cache-primary-key }}
      - name: Save cargo
        id: cache-cargo-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
          key: ${{ steps.cache-cargo-restore.outputs.cache-primary-key }}
      - name: Save target
        id: cache-target-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            target
          key: ${{ steps.cache-target-restore.outputs.cache-primary-key }}
